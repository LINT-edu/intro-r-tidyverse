[
  {
    "objectID": "material/aula01-introducao-r.html",
    "href": "material/aula01-introducao-r.html",
    "title": "Aula 01 ‚Äì Introdu√ß√£o ao R",
    "section": "",
    "text": "Explorar os fundamentos da linguagem R com profundidade conceitual.\nCompreender a estrutura de objetos, vetores e fun√ß√µes no R.\nTrabalhar com listas e data frames, reconhecendo suas estruturas e coer√ß√µes.\nEntender como o ambiente do R √© organizado para an√°lise reprodut√≠vel."
  },
  {
    "objectID": "material/aula01-introducao-r.html#ajuda-interna",
    "href": "material/aula01-introducao-r.html#ajuda-interna",
    "title": "Aula 01 ‚Äì Introdu√ß√£o ao R",
    "section": "Ajuda interna",
    "text": "Ajuda interna\nUse o ? ou help() para ver a documenta√ß√£o de uma fun√ß√£o:\n\n?mean\nhelp(log)"
  },
  {
    "objectID": "material/aula01-introducao-r.html#vignettes",
    "href": "material/aula01-introducao-r.html#vignettes",
    "title": "Aula 01 ‚Äì Introdu√ß√£o ao R",
    "section": "Vignettes",
    "text": "Vignettes\n\nvignette(package = \"dplyr\")"
  },
  {
    "objectID": "material/aula01-introducao-r.html#pesquisar-no-google",
    "href": "material/aula01-introducao-r.html#pesquisar-no-google",
    "title": "Aula 01 ‚Äì Introdu√ß√£o ao R",
    "section": "Pesquisar no Google",
    "text": "Pesquisar no Google\n\nError in log(\"a\") r"
  },
  {
    "objectID": "material/aula01-introducao-r.html#f√≥runs-e-comunidade",
    "href": "material/aula01-introducao-r.html#f√≥runs-e-comunidade",
    "title": "Aula 01 ‚Äì Introdu√ß√£o ao R",
    "section": "F√≥runs e Comunidade",
    "text": "F√≥runs e Comunidade\n\nStack Overflow\ndiscourse.curso-r.com\nR-Ladies Brasil\n\n\n\n\n\n\n\nNote\n\n\n\nüß™ Dica pr√°tica: Crie perguntas reprodut√≠veis. Use pequenos exemplos que possam ser testados por outras pessoas."
  },
  {
    "objectID": "material/aula03-arrumar.html",
    "href": "material/aula03-arrumar.html",
    "title": "Aula 03 ‚Äì Arrumar Dados com tidyr",
    "section": "",
    "text": "Compreender o que s√£o dados arrumados (tidy data).\nUtilizar fun√ß√µes do pacote tidyr para organizar dados em formato adequado para an√°lise.\nTransformar dados amplos em longos e vice-versa com pivot_longer() e pivot_wider().\nSeparar e unir colunas com separate() e unite()."
  },
  {
    "objectID": "material/aula05-visualizar.html",
    "href": "material/aula05-visualizar.html",
    "title": "Aula 05 ‚Äì Visualizar Dados com ggplot2",
    "section": "",
    "text": "Compreender os princ√≠pios da gram√°tica dos gr√°ficos implementada no ggplot2.\nConstruir visualiza√ß√µes com ggplot(), mapeando vari√°veis est√©ticas.\nAdicionar camadas como geom_point(), geom_bar(), geom_line().\nPersonalizar r√≥tulos, cores, escalas e temas gr√°ficos."
  },
  {
    "objectID": "material/aula02-importar.html",
    "href": "material/aula02-importar.html",
    "title": "Aula 02 ‚Äì Importa√ß√£o de Dados com Tidyverse",
    "section": "",
    "text": "Compreender a estrutura e filosofia do tidyverse.\nReconhecer as principais ferramentas de importa√ß√£o de dados (readr, readxl, here).\nUtilizar fun√ß√µes como read_csv(), read_excel() e here() com seguran√ßa.\nInterpretar mensagens de importa√ß√£o e controlar encoding, separadores e tipos de colunas."
  },
  {
    "objectID": "material/aula06-modelar.html",
    "href": "material/aula06-modelar.html",
    "title": "Aula 06",
    "section": "",
    "text": "Em constru√ß√£o\nConte√∫do da aula 06."
  },
  {
    "objectID": "material/aula04-transformar.html",
    "href": "material/aula04-transformar.html",
    "title": "Aula 04 ‚Äì Transformar Dados com dplyr",
    "section": "",
    "text": "Utilizar fun√ß√µes do pacote dplyr para transformar e manipular dados.\nAplicar opera√ß√µes fundamentais como filter(), select(), mutate(), arrange() e summarise().\nCompreender o uso de group_by() para opera√ß√µes por grupos.\nEscrever fluxos de transforma√ß√£o com o operador pipe (%&gt;%)."
  },
  {
    "objectID": "material/aula07-comunicar.html",
    "href": "material/aula07-comunicar.html",
    "title": "Aula 07",
    "section": "",
    "text": "Em constru√ß√£o\nConte√∫do da aula 07."
  },
  {
    "objectID": "material/aula01-introducao-r.html#objetivos-da-aula",
    "href": "material/aula01-introducao-r.html#objetivos-da-aula",
    "title": "Aula 01 ‚Äì Introdu√ß√£o ao R",
    "section": "",
    "text": "Explorar os fundamentos da linguagem R com profundidade conceitual.\nCompreender a estrutura de objetos, vetores e fun√ß√µes no R.\nTrabalhar com listas e data frames, reconhecendo suas estruturas e coer√ß√µes.\nEntender como o ambiente do R √© organizado para an√°lise reprodut√≠vel."
  },
  {
    "objectID": "material/aula01-introducao-r.html#o-que-√©-r-e-rstudio",
    "href": "material/aula01-introducao-r.html#o-que-√©-r-e-rstudio",
    "title": "Aula 01 ‚Äì Introdu√ß√£o ao R",
    "section": "O que √© R e RStudio?",
    "text": "O que √© R e RStudio?\nO R √© uma linguagem de programa√ß√£o orientada a an√°lise de dados, estat√≠stica e visualiza√ß√£o gr√°fica. Ele √© interpretado, fortemente tipado e vetorizado por padr√£o. O RStudio √© um ambiente de desenvolvimento integrado (IDE) que facilita a organiza√ß√£o e execu√ß√£o de projetos em R."
  },
  {
    "objectID": "material/aula01-introducao-r.html#o-r-como-linguagem-interpretada-e-vetorizada",
    "href": "material/aula01-introducao-r.html#o-r-como-linguagem-interpretada-e-vetorizada",
    "title": "Aula 01 ‚Äì Introdu√ß√£o ao R",
    "section": "O R como linguagem interpretada e vetorizada",
    "text": "O R como linguagem interpretada e vetorizada\nA seguir, apresentamos opera√ß√µes aritm√©ticas b√°sicas e vetorizadas que mostram como o R interpreta e processa express√µes matem√°ticas.\n\n1 + 1\n(5 + 3) / 2\n4 ^ 2\n\nA vetoriza√ß√£o √© uma das caracter√≠sticas mais poderosas do R. Este bloco mostra como opera√ß√µes s√£o aplicadas a vetores de forma eficiente.\n\nx &lt;- c(1, 2, 3)\nx * 2\nx + c(10, 20, 30)\n\nEste exemplo mostra como o R lida com vetores de tamanhos diferentes usando reciclagem de valores.\n\nc(1, 2) + c(10, 20, 30, 40)\n\n\n\n\n\n\n\nNote\n\n\n\nO R realiza reciclagem de vetores quando os comprimentos n√£o s√£o m√∫ltiplos. Isso pode causar erros silenciosos."
  },
  {
    "objectID": "material/aula01-introducao-r.html#criando-objetos-e-entendendo-tipos",
    "href": "material/aula01-introducao-r.html#criando-objetos-e-entendendo-tipos",
    "title": "Aula 01 ‚Äì Introdu√ß√£o ao R",
    "section": "Criando Objetos e entendendo Tipos",
    "text": "Criando Objetos e entendendo Tipos\nNeste bloco, mostramos como criar objetos em R e verificar seus tipos usando a fun√ß√£o class().\n\na &lt;- 5\nb &lt;- \"texto\"\nc &lt;- TRUE\nclass(a)\nclass(b)\nclass(c)\n\nAqui vemos como o R trata diferentes tipos de dados dentro de um vetor, aplicando coer√ß√£o autom√°tica.\n\ncoerced &lt;- c(1, \"a\", TRUE)\ncoerced\nclass(coerced)\n\n\n\n\n\n\n\nNote\n\n\n\nCoer√ß√£o √© o processo pelo qual o R converte automaticamente os tipos de dados de um vetor para um tipo comum, sempre que necess√°rio. Isso ocorre porque vetores s√£o homog√™neos: todos os seus elementos devem ser do mesmo tipo. Quando h√° mistura de tipos, o R aplica regras de coer√ß√£o, convertendo todos os elementos para o tipo mais gen√©rico que possa representar todos os valores presentes.\nA hierarquia de coer√ß√£o no R segue a ordem: logical &lt; integer &lt; double &lt; character. Portanto, se misturarmos n√∫meros e textos, o vetor ser√° convertido para character, pois √© o tipo mais abrangente."
  },
  {
    "objectID": "material/aula01-introducao-r.html#vetores",
    "href": "material/aula01-introducao-r.html#vetores",
    "title": "Aula 01 ‚Äì Introdu√ß√£o ao R",
    "section": "Vetores",
    "text": "Vetores\nApresentamos aqui como criar vetores de diferentes tipos: num√©ricos, caracteres e l√≥gicos.\n\nv1 &lt;- c(10, 20, 30)\nv2 &lt;- c(\"A\", \"B\", \"C\")\nv3 &lt;- c(TRUE, FALSE, TRUE)\n\nMostramos como acessar elementos de um vetor e como atribuir nomes aos elementos para facilitar a leitura.\n\nv1[1]\nv2[1:2]\nnames(v1) &lt;- c(\"Jo√£o\", \"Maria\", \"Pedro\")\nv1[\"Maria\"]"
  },
  {
    "objectID": "material/aula01-introducao-r.html#fun√ß√µes-e-argumentos",
    "href": "material/aula01-introducao-r.html#fun√ß√µes-e-argumentos",
    "title": "Aula 01 ‚Äì Introdu√ß√£o ao R",
    "section": "Fun√ß√µes e Argumentos",
    "text": "Fun√ß√µes e Argumentos\nEste bloco mostra como utilizar fun√ß√µes b√°sicas em R, passar argumentos e interpretar o retorno.\n\nmedia &lt;- mean(v1)\nlog10(media)\nmean(v1, trim = 0.1)"
  },
  {
    "objectID": "material/aula01-introducao-r.html#listas-objetos-heterog√™neos-e-estruturados",
    "href": "material/aula01-introducao-r.html#listas-objetos-heterog√™neos-e-estruturados",
    "title": "Aula 01 ‚Äì Introdu√ß√£o ao R",
    "section": "Listas: objetos heterog√™neos e estruturados",
    "text": "Listas: objetos heterog√™neos e estruturados\nEste bloco demonstra a cria√ß√£o de listas, que permitem agrupar diferentes tipos de dados em uma √∫nica estrutura.\n\nminha_lista &lt;- list(\n  nome = \"Ana\",\n  idade = 28,\n  notas = c(9.5, 8.3, 7.9),\n  aprovado = TRUE\n)\n\nMostramos como acessar os elementos de uma lista utilizando diferentes sintaxes e como inspecionar sua estrutura.\n\nminha_lista$nome\nminha_lista[[\"idade\"]]\nminha_lista[\"notas\"]\nstr(minha_lista)\n\nExemplo de listas aninhadas, com acesso a elementos em subn√≠veis.\n\nlista_aninhada &lt;- list(\n  aluno = minha_lista,\n  turma = \"Biologia\",\n  extra = list(projeto = \"Estat√≠stica\", nota_final = 9.8)\n)\nlista_aninhada$extra$nota_final\n\n[1] 9.8"
  },
  {
    "objectID": "material/aula01-introducao-r.html#data-frames",
    "href": "material/aula01-introducao-r.html#data-frames",
    "title": "Aula 01 ‚Äì Introdu√ß√£o ao R",
    "section": "Data Frames",
    "text": "Data Frames\nA seguir, criamos um data.frame, a principal estrutura para armazenar dados tabulares em R.\n\ndf &lt;- data.frame(\n  nome = c(\"Ana\", \"Bruno\", \"Carlos\"),\n  idade = c(28, 35, 31),\n  aprovado = c(TRUE, TRUE, FALSE)\n)\n\ndf\n\n    nome idade aprovado\n1    Ana    28     TRUE\n2  Bruno    35     TRUE\n3 Carlos    31    FALSE\n\n\nExploramos a estrutura do data.frame, como acessar colunas, linhas e tipos de vari√°veis com str() e sapply().\n\nstr(df)\n\n'data.frame':   3 obs. of  3 variables:\n $ nome    : chr  \"Ana\" \"Bruno\" \"Carlos\"\n $ idade   : num  28 35 31\n $ aprovado: logi  TRUE TRUE FALSE\n\ndf$idade\n\n[1] 28 35 31\n\ndf[1, ]\n\n  nome idade aprovado\n1  Ana    28     TRUE\n\ndf[1:2, \"nome\"]\n\n[1] \"Ana\"   \"Bruno\"\n\nsapply(df, class)\n\n       nome       idade    aprovado \n\"character\"   \"numeric\"   \"logical\""
  },
  {
    "objectID": "material/aula01-introducao-r.html#d√∫vidas-frequentes-de-iniciantes",
    "href": "material/aula01-introducao-r.html#d√∫vidas-frequentes-de-iniciantes",
    "title": "Aula 01 ‚Äì Introdu√ß√£o ao R",
    "section": "D√∫vidas Frequentes de Iniciantes",
    "text": "D√∫vidas Frequentes de Iniciantes\n\nQual a diferen√ßa entre = e &lt;-?\nAmbos operadores podem ser usados para atribui√ß√£o de valores a objetos, mas &lt;- √© o operador preferido na comunidade R, por tornar o c√≥digo mais leg√≠vel e por evitar confus√µes com argumentos nomeados dentro de fun√ß√µes.\nPor que o R mostra um + no console?\nIsso ocorre quando voc√™ come√ßa uma express√£o incompleta. O + indica que o R est√° aguardando o restante da linha para finalizar o comando. Exemplo: digitar mean( sem fechar o par√™ntese resultar√° nisso.\nComo salvar o ambiente de trabalho?\nEvite depender do salvamento autom√°tico de objetos. Prefira salvar scripts (.R ou .Rmd) e reexecutar seu c√≥digo. Isso melhora a reprodutibilidade e evita ac√∫mulo de objetos obsoletos na mem√≥ria.\nData frames s√£o listas?\nSim. Um data.frame √© tecnicamente uma lista onde cada elemento (coluna) √© um vetor da mesma extens√£o. Essa estrutura permite que colunas tenham tipos diferentes, mas exige consist√™ncia no n√∫mero de linhas."
  },
  {
    "objectID": "material/aula01-introducao-r.html#como-pedir-ajuda-no-r",
    "href": "material/aula01-introducao-r.html#como-pedir-ajuda-no-r",
    "title": "Aula 01 ‚Äì Introdu√ß√£o ao R",
    "section": "Como Pedir Ajuda no R?",
    "text": "Como Pedir Ajuda no R?\nEste bloco mostra formas de acessar ajuda interna no R e consultar vignettes.\n\n?mean\nargs(log)\nvignette(package = \"ggplot2\")"
  },
  {
    "objectID": "material/aula01-introducao-r.html#exerc√≠cios",
    "href": "material/aula01-introducao-r.html#exerc√≠cios",
    "title": "Aula 01 ‚Äì Introdu√ß√£o ao R",
    "section": "Exerc√≠cios",
    "text": "Exerc√≠cios\nVetores e estat√≠sticas b√°sicas\n1. Crie um vetor num√©rico com 10 valores aleat√≥rios e calcule a m√©dia, mediana e desvio padr√£o.\nTipos e coer√ß√£o\n2. Crie um vetor misto e verifique o tipo resultante. Interprete a coer√ß√£o.\nData Frames\n3. Monte um data.frame com colunas nome, idade, sexo, altura e aprovado. 4. Use str() e sapply() para inspecionar seu data.frame.\n\n\nF√≥runs √∫teis:\n\ndiscourse\nStackoverflow\nR-Ladies"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bem-vindo ao curso",
    "section": "",
    "text": "Introdu√ß√£o\nEste √© um curso introdut√≥rio ao R com foco em ci√™ncia de dados usando o pacote tidyverse.\nAo longo das aulas, voc√™ aprender√°:\n\nA base da linguagem R\nComo importar, arrumar, transformar, visualizar e modelar dados\nComo gerar relat√≥rios reprodut√≠veis\n\nUse o menu acima para navegar entre os m√≥dulos."
  },
  {
    "objectID": "material/aula02-importar.html#objetivos-da-aula",
    "href": "material/aula02-importar.html#objetivos-da-aula",
    "title": "Aula 02 ‚Äì Importa√ß√£o de Dados com Tidyverse",
    "section": "",
    "text": "Compreender a estrutura e filosofia do tidyverse.\nReconhecer as principais ferramentas de importa√ß√£o de dados (readr, readxl, here).\nUtilizar fun√ß√µes como read_csv(), read_excel() e here() com seguran√ßa.\nInterpretar mensagens de importa√ß√£o e controlar encoding, separadores e tipos de colunas."
  },
  {
    "objectID": "material/aula02-importar.html#o-que-√©-o-tidyverse",
    "href": "material/aula02-importar.html#o-que-√©-o-tidyverse",
    "title": "Aula 02 ‚Äì Importa√ß√£o de Dados com Tidyverse",
    "section": "O que √© o Tidyverse?",
    "text": "O que √© o Tidyverse?\nO tidyverse √© uma cole√ß√£o de pacotes desenvolvidos para facilitar o trabalho com dados no R. Ele oferece uma abordagem integrada e coerente para:\n\nImportar (readr, readxl, here);\nOrganizar e transformar (dplyr, tidyr);\nVisualizar (ggplot2);\nModelar e comunicar resultados (broom, rmarkdown, etc.).\n\nA proposta central do tidyverse √© tornar o fluxo de trabalho mais fluido e leg√≠vel ‚Äî criando um ‚Äúdialeto‚Äù amig√°vel da linguagem R para an√°lise de dados.\n\ninstall.packages(\"tidyverse\")\nlibrary(tidyverse)"
  },
  {
    "objectID": "material/aula02-importar.html#estrutura-tidy-dados-arrumados",
    "href": "material/aula02-importar.html#estrutura-tidy-dados-arrumados",
    "title": "Aula 02 ‚Äì Importa√ß√£o de Dados com Tidyverse",
    "section": "Estrutura Tidy: Dados arrumados",
    "text": "Estrutura Tidy: Dados arrumados\nAntes de importar dados, √© importante compreender a estrutura ideal de organiza√ß√£o dos dados: os chamados dados arrumados. Essa estrutura √© a base para a compatibilidade com a maioria das ferramentas do tidyverse.\nO conceito de dados arrumados (tidy dados) √© definido por tr√™s regras principais:\n\nCada vari√°vel em uma coluna;\nCada observa√ß√£o em uma linha;\nCada c√©lula cont√©m apenas um valor.\n\nEsses princ√≠pios facilitam a an√°lise, visualiza√ß√£o e transforma√ß√£o dos dados ao longo do projeto."
  },
  {
    "objectID": "material/aula02-importar.html#come√ßando-por-importar-dados",
    "href": "material/aula02-importar.html#come√ßando-por-importar-dados",
    "title": "Aula 02 ‚Äì Importa√ß√£o de Dados com Tidyverse",
    "section": "Come√ßando por importar dados",
    "text": "Come√ßando por importar dados\nCom a estrutura tidy em mente, iniciamos agora a pr√°tica de importa√ß√£o de dados no R. Nesta aula, abordaremos como importar arquivos .csv e .xlsx de forma organizada e reprodut√≠vel."
  },
  {
    "objectID": "material/aula02-importar.html#usando-o-pacote-here-para-caminhos-seguros",
    "href": "material/aula02-importar.html#usando-o-pacote-here-para-caminhos-seguros",
    "title": "Aula 02 ‚Äì Importa√ß√£o de Dados com Tidyverse",
    "section": "Usando o pacote here para caminhos seguros",
    "text": "Usando o pacote here para caminhos seguros\nAntes de realizar a importa√ß√£o de arquivos, √© essencial definir os caminhos corretamente. O pacote here nos ajuda a construir caminhos relativos ao projeto, evitando problemas comuns com setwd() e garantindo portabilidade entre sistemas.\n\ninstall.packages(\"here\")\nlibrary(here)\n\nhere::here(\"data\", \"exemplo.csv\")"
  },
  {
    "objectID": "material/aula02-importar.html#importando-arquivos-.csv-com-readrread_csv",
    "href": "material/aula02-importar.html#importando-arquivos-.csv-com-readrread_csv",
    "title": "Aula 02 ‚Äì Importa√ß√£o de Dados com Tidyverse",
    "section": "Importando arquivos .csv com readr::read_csv()",
    "text": "Importando arquivos .csv com readr::read_csv()\nA fun√ß√£o read_csv() do pacote readr √© uma das formas mais eficientes e seguras de importar dados delimitados por v√≠rgulas. Ela reconhece automaticamente os tipos de colunas, permite ajustes de encoding e √© altamente compat√≠vel com fluxos tidyverse.\n\ndata &lt;- read_csv(\n  here::here(\"data\", \"exemplo.csv\"),\n  locale = readr::locale(encoding = \"UTF-8\")\n)\n\n\n\n\n\n\n\nNote\n\n\n\nüìå read_csv() identifica automaticamente os tipos de coluna, mas voc√™ pode for√ßar ou revisar com col_types."
  },
  {
    "objectID": "material/aula02-importar.html#importando-arquivos-.xlsx-com-readxlread_excel",
    "href": "material/aula02-importar.html#importando-arquivos-.xlsx-com-readxlread_excel",
    "title": "Aula 02 ‚Äì Importa√ß√£o de Dados com Tidyverse",
    "section": "Importando arquivos .xlsx com readxl::read_excel()",
    "text": "Importando arquivos .xlsx com readxl::read_excel()\nPlanilhas do Excel tamb√©m s√£o comumente usadas para armazenamento de dados. O pacote readxl, parte do ecossistema tidyverse, permite importar arquivos .xlsx com facilidade.\n\ndata &lt;- read_excel(\n  here::here(\"data\", \"exemplo.xlsx\"),\n  sheet = \"Plan1\"\n)"
  },
  {
    "objectID": "material/aula02-importar.html#lidando-com-arquivos-.csv2-separador-e-decimal",
    "href": "material/aula02-importar.html#lidando-com-arquivos-.csv2-separador-e-decimal",
    "title": "Aula 02 ‚Äì Importa√ß√£o de Dados com Tidyverse",
    "section": "Lidando com arquivos .csv2 (separador ; e decimal ,)",
    "text": "Lidando com arquivos .csv2 (separador ; e decimal ,)\nArquivos .csv2 s√£o comuns em contextos brasileiros e europeus, utilizando ; como separador e , como separador decimal. O readr oferece a fun√ß√£o read_csv2() para lidar com esse padr√£o.\n\ndata &lt;- readr::read_csv2(\n  here::here(\"data\", \"exemplo_brasil.csv\")\n)"
  },
  {
    "objectID": "material/aula02-importar.html#explorando-o-conte√∫do-dos-dados-importados",
    "href": "material/aula02-importar.html#explorando-o-conte√∫do-dos-dados-importados",
    "title": "Aula 02 ‚Äì Importa√ß√£o de Dados com Tidyverse",
    "section": "Explorando o conte√∫do dos dados importados",
    "text": "Explorando o conte√∫do dos dados importados\nAp√≥s a importa√ß√£o, √© fundamental examinar a estrutura dos dados. As fun√ß√µes glimpse() e spec() permitem inspecionar rapidamente as colunas e os tipos inferidos pelo R. A fun√ß√£o View() tamb√©m pode ser usada para abrir uma visualiza√ß√£o interativa da tabela no RStudio, semelhante a uma planilha.\n\ndplyr::glimpse(data)\nreadr::spec(data)\n\n\nView(data)\n\nUse glimpse() para uma vis√£o geral r√°pida e spec() para ver a infer√™ncia de tipos feita automaticamente."
  },
  {
    "objectID": "material/aula02-importar.html#exerc√≠cios",
    "href": "material/aula02-importar.html#exerc√≠cios",
    "title": "Aula 02 ‚Äì Importa√ß√£o de Dados com Tidyverse",
    "section": "Exerc√≠cios",
    "text": "Exerc√≠cios\n\nImporte um arquivo .csv de sua escolha com readr::read_csv() usando here().\nImporte uma planilha .xlsx usando readxl::read_excel().\nVerifique os tipos de cada coluna com spec() e glimpse().\nTeste a fun√ß√£o read_csv2() com um arquivo brasileiro e explique a diferen√ßa."
  },
  {
    "objectID": "material/aula05-visualizar.html#objetivos-da-aula",
    "href": "material/aula05-visualizar.html#objetivos-da-aula",
    "title": "Aula 05 ‚Äì Visualizar Dados com ggplot2",
    "section": "",
    "text": "Compreender os princ√≠pios da gram√°tica dos gr√°ficos implementada no ggplot2.\nConstruir visualiza√ß√µes com ggplot(), mapeando vari√°veis est√©ticas.\nAdicionar camadas como geom_point(), geom_bar(), geom_line().\nPersonalizar r√≥tulos, cores, escalas e temas gr√°ficos."
  },
  {
    "objectID": "material/aula05-visualizar.html#introdu√ß√£o",
    "href": "material/aula05-visualizar.html#introdu√ß√£o",
    "title": "Aula 05 ‚Äì Visualizar Dados com ggplot2",
    "section": "Introdu√ß√£o",
    "text": "Introdu√ß√£o\nA cria√ß√£o de gr√°ficos no ggplot2 segue a l√≥gica da gram√°tica dos gr√°ficos (grammar of graphics), onde gr√°ficos s√£o constru√≠dos camada por camada.\nEssa abordagem modular permite construir visualiza√ß√µes complexas de forma controlada e transparente."
  },
  {
    "objectID": "material/aula05-visualizar.html#carregando-pacotes-necess√°rios",
    "href": "material/aula05-visualizar.html#carregando-pacotes-necess√°rios",
    "title": "Aula 05 ‚Äì Visualizar Dados com ggplot2",
    "section": "Carregando pacotes necess√°rios",
    "text": "Carregando pacotes necess√°rios\nO pacote ggplot2 j√° est√° inclu√≠do no tidyverse.\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "material/aula05-visualizar.html#conhecendo-a-estrutura-de-ggplot",
    "href": "material/aula05-visualizar.html#conhecendo-a-estrutura-de-ggplot",
    "title": "Aula 05 ‚Äì Visualizar Dados com ggplot2",
    "section": "Conhecendo a estrutura de ggplot()",
    "text": "Conhecendo a estrutura de ggplot()\nA fun√ß√£o ggplot() serve como ponto de partida, onde definimos os dados e os mapeamentos est√©ticos ‚Äî isto √©, quais vari√°veis ser√£o representadas nos eixos ou em outras propriedades visuais.\n\nggplot(data = mpg, mapping = aes(x = displ, y = hwy))"
  },
  {
    "objectID": "material/aula05-visualizar.html#adicionando-camadas-com",
    "href": "material/aula05-visualizar.html#adicionando-camadas-com",
    "title": "Aula 05 ‚Äì Visualizar Dados com ggplot2",
    "section": "Adicionando camadas com +",
    "text": "Adicionando camadas com +\nAs camadas (geoms) definem o tipo de gr√°fico. Abaixo, criamos um gr√°fico de dispers√£o com geom_point().\n\nggplot(data = mpg, aes(x = displ, y = hwy)) +\n  geom_point()"
  },
  {
    "objectID": "material/aula05-visualizar.html#mapeando-vari√°veis-est√©ticas",
    "href": "material/aula05-visualizar.html#mapeando-vari√°veis-est√©ticas",
    "title": "Aula 05 ‚Äì Visualizar Dados com ggplot2",
    "section": "Mapeando vari√°veis est√©ticas",
    "text": "Mapeando vari√°veis est√©ticas\nMapear vari√°veis para cor, forma ou tamanho adiciona dimens√£o √† visualiza√ß√£o.\n\nggplot(mpg, aes(x = displ, y = hwy, color = class)) +\n  geom_point()"
  },
  {
    "objectID": "material/aula05-visualizar.html#gr√°ficos-de-barras-com-geom_bar",
    "href": "material/aula05-visualizar.html#gr√°ficos-de-barras-com-geom_bar",
    "title": "Aula 05 ‚Äì Visualizar Dados com ggplot2",
    "section": "Gr√°ficos de barras com geom_bar()",
    "text": "Gr√°ficos de barras com geom_bar()\nO geom_bar() pode ser usado de duas formas: com contagem autom√°tica ou com stat = \"identity\" quando os valores j√° est√£o agregados.\n\nggplot(mpg, aes(x = class)) +\n  geom_bar()"
  },
  {
    "objectID": "material/aula05-visualizar.html#gr√°ficos-de-linhas-com-geom_line",
    "href": "material/aula05-visualizar.html#gr√°ficos-de-linhas-com-geom_line",
    "title": "Aula 05 ‚Äì Visualizar Dados com ggplot2",
    "section": "Gr√°ficos de linhas com geom_line()",
    "text": "Gr√°ficos de linhas com geom_line()\nUsado principalmente para s√©ries temporais ou rela√ß√µes cont√≠nuas ordenadas.\n\ndata &lt;- tibble(tempo = 1:10, valor = cumsum(rnorm(10)))\n\nggplot(data, aes(x = tempo, y = valor)) +\n  geom_line()"
  },
  {
    "objectID": "material/aula05-visualizar.html#personalizando-o-gr√°fico-t√≠tulos-cores-e-temas",
    "href": "material/aula05-visualizar.html#personalizando-o-gr√°fico-t√≠tulos-cores-e-temas",
    "title": "Aula 05 ‚Äì Visualizar Dados com ggplot2",
    "section": "Personalizando o gr√°fico: t√≠tulos, cores e temas",
    "text": "Personalizando o gr√°fico: t√≠tulos, cores e temas\nPodemos adicionar r√≥tulos, modificar escalas e aplicar temas para tornar os gr√°ficos mais informativos e est√©ticos.\n\nggplot(mpg, aes(x = displ, y = hwy, color = class)) +\n  geom_point() +\n  labs(title = \"Efici√™ncia por tipo de carro\",\n       x = \"Tamanho do motor (L)\",\n       y = \"MPG rodovia\",\n       color = \"Classe\") +\n  theme_minimal()"
  },
  {
    "objectID": "material/aula05-visualizar.html#exerc√≠cios",
    "href": "material/aula05-visualizar.html#exerc√≠cios",
    "title": "Aula 05 ‚Äì Visualizar Dados com ggplot2",
    "section": "Exerc√≠cios",
    "text": "Exerc√≠cios\n\nCrie um gr√°fico de dispers√£o de mpg com hwy vs.¬†displ.\nMapeie a vari√°vel drv na cor dos pontos.\nCrie um gr√°fico de barras com a contagem de ve√≠culos por class.\nGere um gr√°fico de linhas com dados simulados de s√©rie temporal.\nAplique um tema diferente ao gr√°fico e adicione t√≠tulo e r√≥tulos."
  },
  {
    "objectID": "material/aula03-arrumar.html#objetivos-da-aula",
    "href": "material/aula03-arrumar.html#objetivos-da-aula",
    "title": "Aula 03 ‚Äì Arrumar Dados com tidyr",
    "section": "",
    "text": "Compreender o que s√£o dados arrumados (tidy data).\nUtilizar fun√ß√µes do pacote tidyr para organizar dados em formato adequado para an√°lise.\nTransformar dados amplos em longos e vice-versa com pivot_longer() e pivot_wider().\nSeparar e unir colunas com separate() e unite()."
  },
  {
    "objectID": "material/aula03-arrumar.html#por-que-arrumar-os-dados",
    "href": "material/aula03-arrumar.html#por-que-arrumar-os-dados",
    "title": "Aula 03 ‚Äì Arrumar Dados com tidyr",
    "section": "Por que arrumar os dados?",
    "text": "Por que arrumar os dados?\nA maior parte dos pacotes do tidyverse ‚Äî como ggplot2, dplyr, purrr ‚Äî pressup√µe que seus dados estejam no formato tidy. Esse formato facilita opera√ß√µes como filtragem, visualiza√ß√£o, modelagem e comunica√ß√£o de resultados."
  },
  {
    "objectID": "material/aula03-arrumar.html#carregando-pacotes-necess√°rios",
    "href": "material/aula03-arrumar.html#carregando-pacotes-necess√°rios",
    "title": "Aula 03 ‚Äì Arrumar Dados com tidyr",
    "section": "Carregando pacotes necess√°rios",
    "text": "Carregando pacotes necess√°rios\nNesta etapa, carregamos os pacotes essenciais para trabalhar com dados no estilo tidy. O tidyverse engloba tanto o tidyr, que ser√° o foco da aula, quanto pacotes auxiliares como dplyr e ggplot2.\n\nlibrary(tidyverse)  # carrega tidyr, dplyr, ggplot2, etc."
  },
  {
    "objectID": "material/aula03-arrumar.html#estrutura-comum-de-dados-desarrumados",
    "href": "material/aula03-arrumar.html#estrutura-comum-de-dados-desarrumados",
    "title": "Aula 03 ‚Äì Arrumar Dados com tidyr",
    "section": "Estrutura comum de dados desarrumados",
    "text": "Estrutura comum de dados desarrumados\nAntes de aprender a arrumar os dados, √© importante reconhecer como se apresentam conjuntos de dados desorganizados. Esta se√ß√£o discute os padr√µes mais comuns de dados desarrumados e por que eles dificultam a an√°lise. Aqui alguns padr√µes para reconhecer formatos ‚Äúdesarrumados‚Äù, como:\n\nDados com valores em nomes de colunas;\nM√∫ltiplas vari√°veis em uma √∫nica coluna;\nObserva√ß√µes espalhadas em v√°rias tabelas."
  },
  {
    "objectID": "material/aula03-arrumar.html#transformando-dados-amplos-em-longos-com-pivot_longer",
    "href": "material/aula03-arrumar.html#transformando-dados-amplos-em-longos-com-pivot_longer",
    "title": "Aula 03 ‚Äì Arrumar Dados com tidyr",
    "section": "Transformando dados amplos em longos com pivot_longer()",
    "text": "Transformando dados amplos em longos com pivot_longer()\nAgora vamos aprender a transformar dados em formato ‚Äúamplo‚Äù (com vari√°veis nos nomes das colunas) para o formato ‚Äúlongo‚Äù ‚Äî o formato ideal para a maioria das an√°lises e visualiza√ß√µes no tidyverse.\nVamos usar um exemplo em que temos colunas representando diferentes anos e queremos reorganiz√°-las em formato longo.\n\nwide_data &lt;- tibble(\n  estado = c(\"SP\", \"RJ\", \"MG\"),\n  `2020` = c(100, 80, 90),\n  `2021` = c(110, 85, 95)\n)\n\nlong_data &lt;- wide_data %&gt;%\n  pivot_longer(\n    cols = c(`2020`, `2021`),\n    names_to = \"ano\",\n    values_to = \"valor\"\n  )"
  },
  {
    "objectID": "material/aula03-arrumar.html#transformando-dados-longos-em-amplos-com-pivot_wider",
    "href": "material/aula03-arrumar.html#transformando-dados-longos-em-amplos-com-pivot_wider",
    "title": "Aula 03 ‚Äì Arrumar Dados com tidyr",
    "section": "Transformando dados longos em amplos com pivot_wider()",
    "text": "Transformando dados longos em amplos com pivot_wider()\n√Äs vezes √© √∫til inverter a opera√ß√£o anterior, convertendo dados do formato longo para o formato amplo ‚Äî por exemplo, ao gerar tabelas para relat√≥rios ou compara√ß√µes visuais lado a lado.\nAgora fazemos o caminho inverso, √∫til por exemplo para gerar tabelas.\n\nwide_again &lt;- long_data %&gt;%\n  pivot_wider(\n    names_from = ano,\n    values_from = valor\n  )\n\n\n\n\n\n\n\nNote\n\n\n\nO operador %&gt;%, conhecido como pipe, √© utilizado para encadear fun√ß√µes em R de forma leg√≠vel. Ele permite passar o resultado de uma express√£o como primeiro argumento da pr√≥xima fun√ß√£o."
  },
  {
    "objectID": "material/aula03-arrumar.html#separando-colunas-com-separate",
    "href": "material/aula03-arrumar.html#separando-colunas-com-separate",
    "title": "Aula 03 ‚Äì Arrumar Dados com tidyr",
    "section": "Separando colunas com separate()",
    "text": "Separando colunas com separate()\nQuando uma √∫nica coluna cont√©m mais de uma vari√°vel combinada (por exemplo, ‚Äúnome-idade‚Äù), podemos separ√°-la em m√∫ltiplas colunas usando a fun√ß√£o separate().\n\ndf &lt;- tibble(pessoa = c(\"Joao-25\", \"Maria-30\"))\n\ndf_sep &lt;- df %&gt;%\n  separate(pessoa, into = c(\"nome\", \"idade\"), sep = \"-\")"
  },
  {
    "objectID": "material/aula03-arrumar.html#unindo-colunas-com-unite",
    "href": "material/aula03-arrumar.html#unindo-colunas-com-unite",
    "title": "Aula 03 ‚Äì Arrumar Dados com tidyr",
    "section": "Unindo colunas com unite()",
    "text": "Unindo colunas com unite()\nO oposto da separa√ß√£o: se quisermos combinar duas ou mais colunas em uma s√≥ (por exemplo, reconstruir ‚Äúnome-idade‚Äù), utilizamos a fun√ß√£o unite().\n\ndf_unido &lt;- df_sep %&gt;%\n  unite(\"pessoa\", nome, idade, sep = \"-\")"
  },
  {
    "objectID": "material/aula03-arrumar.html#exerc√≠cios",
    "href": "material/aula03-arrumar.html#exerc√≠cios",
    "title": "Aula 03 ‚Äì Arrumar Dados com tidyr",
    "section": "Exerc√≠cios",
    "text": "Exerc√≠cios\nEstes exerc√≠cios refor√ßam o conte√∫do abordado, permitindo aplicar pivot_longer(), pivot_wider(), separate() e unite() em situa√ß√µes pr√°ticas.\n\nConverta um conjunto de dados amplo para o formato longo usando pivot_longer().\nFa√ßa a opera√ß√£o inversa com pivot_wider().\nUse separate() para dividir uma coluna composta.\nUse unite() para reconstru√≠-la."
  },
  {
    "objectID": "material/aula04-transformar.html#objetivos-da-aula",
    "href": "material/aula04-transformar.html#objetivos-da-aula",
    "title": "Aula 04 ‚Äì Transformar Dados com dplyr",
    "section": "",
    "text": "Utilizar fun√ß√µes do pacote dplyr para transformar e manipular dados.\nAplicar opera√ß√µes fundamentais como filter(), select(), mutate(), arrange() e summarise().\nCompreender o uso de group_by() para opera√ß√µes por grupos.\nEscrever fluxos de transforma√ß√£o com o operador pipe (%&gt;%)."
  },
  {
    "objectID": "material/aula04-transformar.html#introdu√ß√£o",
    "href": "material/aula04-transformar.html#introdu√ß√£o",
    "title": "Aula 04 ‚Äì Transformar Dados com dplyr",
    "section": "Introdu√ß√£o",
    "text": "Introdu√ß√£o\nTransformar dados significa aplicar opera√ß√µes que mudam seu conte√∫do ou estrutura ‚Äî seja filtrando linhas, criando colunas, reordenando registros ou agrupando valores. O pacote dplyr oferece uma sintaxe concisa e poderosa para essas tarefas, mantendo a legibilidade e o fluxo l√≥gico da an√°lise."
  },
  {
    "objectID": "material/aula04-transformar.html#carregando-pacotes-necess√°rios",
    "href": "material/aula04-transformar.html#carregando-pacotes-necess√°rios",
    "title": "Aula 04 ‚Äì Transformar Dados com dplyr",
    "section": "Carregando pacotes necess√°rios",
    "text": "Carregando pacotes necess√°rios\nVamos utilizar o tidyverse, que j√° inclui o dplyr e outros pacotes √∫teis para o fluxo de trabalho com dados.\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "material/aula04-transformar.html#explorando-o-conjunto-de-dados",
    "href": "material/aula04-transformar.html#explorando-o-conjunto-de-dados",
    "title": "Aula 04 ‚Äì Transformar Dados com dplyr",
    "section": "Explorando o conjunto de dados",
    "text": "Explorando o conjunto de dados\nAntes de transformar, precisamos conhecer a estrutura dos dados. Vamos usar o conjunto starwars, incluso no dplyr, que cont√©m informa√ß√µes sobre personagens da saga Star Wars.\n\nstarwars\nglimpse(starwars)"
  },
  {
    "objectID": "material/aula04-transformar.html#selecionando-colunas-com-select",
    "href": "material/aula04-transformar.html#selecionando-colunas-com-select",
    "title": "Aula 04 ‚Äì Transformar Dados com dplyr",
    "section": "Selecionando colunas com select()",
    "text": "Selecionando colunas com select()\nSelecionamos apenas as colunas de interesse, o que √© √∫til para focar na an√°lise e reduzir ru√≠do visual.\n\nstarwars %&gt;%\n  select(name, height, mass)"
  },
  {
    "objectID": "material/aula04-transformar.html#filtrando-linhas-com-filter",
    "href": "material/aula04-transformar.html#filtrando-linhas-com-filter",
    "title": "Aula 04 ‚Äì Transformar Dados com dplyr",
    "section": "Filtrando linhas com filter()",
    "text": "Filtrando linhas com filter()\nFiltramos observa√ß√µes que atendem a uma condi√ß√£o l√≥gica. √ötil para trabalhar com subconjuntos dos dados.\n\nstarwars %&gt;%\n  filter(species == \"Human\")"
  },
  {
    "objectID": "material/aula04-transformar.html#criando-novas-colunas-com-mutate",
    "href": "material/aula04-transformar.html#criando-novas-colunas-com-mutate",
    "title": "Aula 04 ‚Äì Transformar Dados com dplyr",
    "section": "Criando novas colunas com mutate()",
    "text": "Criando novas colunas com mutate()\nCriamos vari√°veis derivadas a partir das existentes.\n\nstarwars %&gt;%\n  mutate(imc = mass / (height/100)^2)  # √≠ndice de massa corporal"
  },
  {
    "objectID": "material/aula04-transformar.html#reordenando-linhas-com-arrange",
    "href": "material/aula04-transformar.html#reordenando-linhas-com-arrange",
    "title": "Aula 04 ‚Äì Transformar Dados com dplyr",
    "section": "Reordenando linhas com arrange()",
    "text": "Reordenando linhas com arrange()\nOrdenamos os dados com base em uma ou mais colunas.\n\nstarwars %&gt;%\n  arrange(height)\n\nstarwars %&gt;%\n  arrange(desc(mass))"
  },
  {
    "objectID": "material/aula04-transformar.html#resumindo-dados-com-summarise-e-group_by",
    "href": "material/aula04-transformar.html#resumindo-dados-com-summarise-e-group_by",
    "title": "Aula 04 ‚Äì Transformar Dados com dplyr",
    "section": "Resumindo dados com summarise() e group_by()",
    "text": "Resumindo dados com summarise() e group_by()\nAgrupamos os dados por uma vari√°vel e, em seguida, aplicamos opera√ß√µes de resumo.\n\nstarwars %&gt;%\n  group_by(species) %&gt;%\n  summarise(media_altura = mean(height, na.rm = TRUE))"
  },
  {
    "objectID": "material/aula04-transformar.html#combinando-tudo-em-um-fluxo",
    "href": "material/aula04-transformar.html#combinando-tudo-em-um-fluxo",
    "title": "Aula 04 ‚Äì Transformar Dados com dplyr",
    "section": "Combinando tudo em um fluxo",
    "text": "Combinando tudo em um fluxo\nAs fun√ß√µes do dplyr podem ser encadeadas com o operador %&gt;%, criando fluxos de transforma√ß√£o leg√≠veis e concisos.\n\nstarwars %&gt;%\n  filter(!is.na(mass)) %&gt;%\n  mutate(imc = mass / (height/100)^2) %&gt;%\n  group_by(species) %&gt;%\n  summarise(media_imc = mean(imc, na.rm = TRUE)) %&gt;%\n  arrange(desc(media_imc))"
  },
  {
    "objectID": "material/aula04-transformar.html#exerc√≠cios",
    "href": "material/aula04-transformar.html#exerc√≠cios",
    "title": "Aula 04 ‚Äì Transformar Dados com dplyr",
    "section": "Exerc√≠cios",
    "text": "Exerc√≠cios\n\nSelecione apenas as colunas name, birth_year e species.\nFiltre apenas personagens com massa maior que 100.\nCrie uma nova coluna chamada altura_m com a altura em metros.\nAgrupe os dados por species e calcule a m√©dia da altura.\nOrdene os resultados de forma decrescente pela m√©dia da altura."
  }
]